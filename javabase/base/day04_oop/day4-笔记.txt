一.面向对象概念
	1.什么是对象:
		现实社会中由各种各样的事物所组成, 而程序是模拟现实社会的, 在程序中表示这些事物, 就是使用对象.
		万物皆对象.
	2.面向对象特征:
		封装, 抽象, 继承, 多态.
	3.面向对象的优点:
		将一类事物的特征和功能抽取, 写在一个类中, 定义成属性和方法.
		之后根据类创建对象, 操作对象来完成对应的工作.
		代码复用性高, 每次完成一个功能, 就是调用对象的方法.
		使用者无需关心具体细节, 功能的实现是封装在方法中的, 程序员只要调用方法, 就可以完成工作.
		转变程序员的角色, 更加符合人的思维习惯. 程序员变成一个指挥的角色, 需要哪类事物就可以创建哪类对象, 然后调用对象的方法.
	4.类:
		类是对象的抽象, 对象是类的实例.
	5.创建对象:
		使用new关键字可以根据类创建一个对象.
		
二.面向对象细节
	1.成员变量和局部变量的访问
		在类中直接定义的变量叫成员变量, 也可以叫做类的属性, 用来描述这一类对象的特征.
		而如果在某个方法中定义和成员变量相同名字的局部变量, 那么在方法中以这个名字访问的话, 会优先找局部变量.
		如果一定要访问类的成员变量, 可以在变量名前加 this. 
		this是一个引用, 谁调用当前方法, 就引用谁.
	2.对象创建过程
		Person p = new Person(); 这一行代码都做了什么?
		在栈内存中开辟空间, 起名叫p.
		在堆内存中创建对象Person
		初始化成员变量, 给成员变量赋默认值
		将对象的地址赋值给p变量, p变量引用了new Person()对象
	3.成员变量初始化的默认类型
		基本数据类型都是0
		引用数据类型都是null
	4.对象的生命周期
		对象的生命周期从new关键字创建时开始.
		没有任何引用可以到达对象, 对象生命周期结束, 成为垃圾.
	5.匿名对象
		如果一个对象只使用一次, 我们就可以将其定义为匿名对象, 不用任何变量引用这个对象.
		匿名对象的生命周期从创建开始, 使用一次之后就成为了垃圾.
		匿名对象通常作为一个实参传递给方法.
		
三.封装
	1.什么是封装
		将一组对象共有的特征和功能总结成属性和方法, 写入一个类中, 这个类就可以用来描述这一组对象.
	2.属性的封装
		类的属性要使用private关键字修饰, 定义为私有化, 不能让其他类直接访问.
		定义公有的get,set方法来访问类的属性.
	3.方法的封装
		有时候我们的方法也会定义为private, 只在当前类中调用.
		例如电脑的开机方法, 有可能调用到了cpu的运行, 硬盘的运行, 等若干原件的运行. 
		用户无需关心这些原件的运行方法, 只要调用电脑开机, 那么电脑开机方法中会调用这些方法.
		这些方法就没有必要暴露出来了.
		
		
报错
	Package.java:5: name has private access in Person
                p.name = "??";
	5行: name在Person类中是私有的