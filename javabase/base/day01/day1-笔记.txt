一.计算机编程基础
	1.二进制
		计算机中存储数据是使用二进制的形式.
		十进制是从0到9, 逢10进1. 
		二进制由0和1组成, 逢2进1.
	2.机器语言
		直接由计算机识别和运行的语言.
		由二进制组成
	3.高级语言
		使用自然语言编写代码	
		通过编译软件编译成机器语言
	4.Java语言
		先使用自然语言编写代码(.java)
		通过编译器编译成.class文件
		各种平台安装对应的虚拟机, 就都可以运行class文件了

* 二.第一个Java程序
	1.创建一个文件以.java结尾, 其中写一个class类, 写main方法, main方法中写要执行的代码
	2.开始 - 运行 - cmd - 找到源文件所在路径 - 使用 javac 源文件名 的形式编译源代码, 生成class文件
	3.java class文件名

* 三.安装环境
	1.安装jdk
		运行 jdk-1_5_0-windows-i586.exe 
		accept接受协议, next
		安装所有子模块到本地硬盘, 选择路径, next
	2.安装jre(可不装)
		选择安装所有子模块到本地, 选择路径, next
	3.UE配置
		高级 - 配置 - 备份 - 不要备份
		视图 - 显示行号
		高级 - 配置 - 语法高亮 - 自动更正关键词(去掉)
	* 4.配置环境变量Path
		配置path是为了运行javac.exe
		我们在任意目录下输入javac会提示报错, 因为系统找不到javac.exe
		如果想让系统在任意目录找到javac, 那么需要将javac.exe所在目录配置到path环境变量中
			例如: set path=E:\Java\jdk1.5.0\bin
		注意, 这样配置会覆盖之前的path环境变量中的内容, 如果不想覆盖, 需要引用之前的path, 可以使用 %path% 形式
			例如: set path=%path%;E:\Java\jdk1.5.0\bin
		set path的配置方式只适用于当前窗口, 如果想一次配置之后所有窗口都可以使用, 那么需要使用如下配置方式:
			我的电脑 - 属性 - 高级 - 环境变量 - 配置path(用户或系统都可以)
	5.注意JDK版本问题
		javac是编译环境, java是运行环境, 如果一台机器上装了多个版本的java和javac需要注意.
		java的版本不能低于javac的版本
		版本查看方式:
			javac -version
			java -version
	* 6.classpath
		是为了运行java.exe
		classpath是java虚拟机所加载类的路径
		在JDK5之后不配默认是当前目录"."
			例如: java HelloWorld 运行java程序时, 虚拟机去哪个路径下诏HelloWorld.class文件.
		如果配置了其他目录, 就不会在当前目录找了
		安装JDK1.4或之前的版本, 需要配置classpath
		
四.进制转换
	1.十进制转二进制
		将十进制除2取余, 直到这个数为0为止, 将所有的余数反转, 就是这个十进制数对应的二进制
	2.二进制转十进制
		将二进制数的每一位编号, 编号从低位开始, 从0开始. 然后将每一位上的数乘以2的编号次方再相加, 就得到十进制的值了.
	3.八进制
		由0-7组成, 逢8进1. 
		将二进制数, 每3位1看, 以421的形式很容易转换成8进制
		在Java程序中, 如果要表示一个8进制数, 需要以0开头
	4.十六进制
		由0123456789ABCDEF组成, 逢16进1.
		将二进制数, 每4位1看, 以8421的形式可以转换为16进制
		在Java程序中, 如果要表示一个16进制数, 需要以0x开头
		
五.码表
	1.ASCII
		包含键盘上所有按键对应的字符. 每个字符占1字节. 只包含英文. A是65, a是97
	2.GB2312
		兼容ASCII, 英文占1个字节. 中文占2个字节. 中文占2个负数.
	3.GBK, GB18030
		兼容GB2312, 英文占1个字节. 中文占2个字节. 第一个是负数, 第二个可正可负. 
	4.Unicode
		国际码表, 包含了各个国家的官方语言, 中文和英文都占2个字节. 开头有2个字节的标志位. Java编译器和虚拟机中使用的码表就是Unicode
	5.UTF-8
		国际码表, 英文占1个, 中文占3个. 开头有3个标志位.
	
	
六.负数
	1.负数的表现形式
		原码 十进制数忽略符号转成二进制	00000101
		反码 将原码的每一位取反			11111010
		补码 将反码加1					11111011
	2.负数的特点
		二进制数的最高位为符号位
		如果高位是0, 那么这个数就是正数
		如果高位是1, 那么就是负数
	
		
		
报错

Exception in thread "main" java.lang.NoClassDefFoundError: HelloWorld
找不到类定义: HelloWorld