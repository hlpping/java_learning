策略模式

1.将动态的部分封装成接口,具体类实现接口并重写里面的方法
	调用时实现超类,实现接口.
	测试时 调用的是具体的类

2.将动态部分封装成接口,并根据可能的几个动态行为实现接口并重写方法.
	调用方式采取注入的方式 具体参见 demo2/Duck ,MallardDuck
		具体类中根据行为将注入对象和实现行为接口的类关联起来
	测试时 TestDuck 两个类
		Duck duck1 = new MallardDuck();